{"version":3,"file":"static/js/297.d58cea5c.chunk.js","mappings":"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","sources":["webpack://yoomer/./src/features/profile/Profile/Profile.module.scss?d94d","features/profile/ProfileSort/ProfileSort.module.scss","webpack://yoomer/./src/features/profile/ShowProfileSort/ShowProfileSort.module.scss?470f","features/profile/ShowProfileSort/ShowProfileSort.tsx","features/profile/ProfileSort/ProfileSort.tsx","features/profile/ProfileComment/ProfileComment.module.scss","features/profile/ProfileComment/ProfileComment.tsx","features/profile/trimProfileComment.ts","webpack://yoomer/./src/features/profile/ProfileFeed/ProfileFeed.module.scss?5b60","features/profile/ProfileFeed/ProfileFeed.tsx","webpack://yoomer/./src/features/profile/ProfileSidebar/ProfileSidebar.module.scss?1e0a","features/profile/ProfileSidebar/ProfileSidebar.tsx","views/Profile.tsx","features/profile/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__Rt2EM\",\"subgrid\":\"Profile_subgrid__Qvy53\",\"content\":\"Profile_content__-nut7\",\"sortbar\":\"Profile_sortbar__sPo3+\",\"profileSort\":\"Profile_profileSort__CZkWo\",\"profileFeed\":\"Profile_profileFeed__7nry3\",\"fade-in\":\"Profile_fade-in__Jd0Jv\",\"fade-out\":\"Profile_fade-out__LRgGH\",\"scale-up\":\"Profile_scale-up__QwSVA\",\"scale-down\":\"Profile_scale-down__S3Bil\",\"slide-out-up\":\"Profile_slide-out-up__1le9o\",\"slide-out-down\":\"Profile_slide-out-down__Ybbau\",\"slide-out-right\":\"Profile_slide-out-right__oIib8\",\"slide-out-left\":\"Profile_slide-out-left__HCSlt\",\"slide-in-up\":\"Profile_slide-in-up__hHonm\",\"slide-in-down\":\"Profile_slide-in-down__NKeGG\",\"slide-in-right\":\"Profile_slide-in-right__R+Owb\",\"slide-in-left\":\"Profile_slide-in-left__-Vr6P\",\"shake-x\":\"Profile_shake-x__6B-V1\",\"shake-y\":\"Profile_shake-y__r8hBy\",\"spin\":\"Profile_spin__3v9Gu\",\"ping\":\"Profile_ping__uxKfV\",\"blink\":\"Profile_blink__80tgQ\",\"float\":\"Profile_float__g2nfA\",\"bounce\":\"Profile_bounce__fkBqf\",\"pulse\":\"Profile_pulse__yEYJP\"};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"profileSort\":\"ShowProfileSort_profileSort__Qh8bo\",\"active\":\"ShowProfileSort_active__jXMBl\",\"panel\":\"ShowProfileSort_panel__AGbLe\",\"btn\":\"ShowProfileSort_btn__zdJ2K\",\"fade-in\":\"ShowProfileSort_fade-in__ta8nn\",\"fade-out\":\"ShowProfileSort_fade-out__6gJDo\",\"scale-up\":\"ShowProfileSort_scale-up__5vnBp\",\"scale-down\":\"ShowProfileSort_scale-down__EnvDA\",\"slide-out-up\":\"ShowProfileSort_slide-out-up__vNXoK\",\"slide-out-down\":\"ShowProfileSort_slide-out-down__3PUcr\",\"slide-out-right\":\"ShowProfileSort_slide-out-right__WfWDg\",\"slide-out-left\":\"ShowProfileSort_slide-out-left__4aI3q\",\"slide-in-up\":\"ShowProfileSort_slide-in-up__r5hAg\",\"slide-in-down\":\"ShowProfileSort_slide-in-down__xhzln\",\"slide-in-right\":\"ShowProfileSort_slide-in-right__Zl4K9\",\"slide-in-left\":\"ShowProfileSort_slide-in-left__EZ9Jm\",\"shake-x\":\"ShowProfileSort_shake-x__AsQJ7\",\"shake-y\":\"ShowProfileSort_shake-y__qzAzn\",\"spin\":\"ShowProfileSort_spin__bCyE6\",\"ping\":\"ShowProfileSort_ping__n9tDk\",\"blink\":\"ShowProfileSort_blink__pkzVC\",\"float\":\"ShowProfileSort_float__stFk4\",\"bounce\":\"ShowProfileSort_bounce__d7I6Q\",\"pulse\":\"ShowProfileSort_pulse__kHKRo\"};","import React, { FC, RefObject, MouseEvent } from 'react'\r\nimport { IProfileSortBar } from '../types'\r\nimport { Properties } from 'csstype'\r\nimport classes from './ShowProfileSort.module.scss'\r\n\r\ninterface ShowProfileSortProps {\r\n  ref: RefObject<HTMLDivElement>,\r\n  dyeSortButton(currentSort: IProfileSortBar): Properties,\r\n  changeSort(sort: IProfileSortBar): void,\r\n  isMe: boolean,\r\n  slide(e: MouseEvent): void\r\n}\r\n\r\nconst ShowProfileSort: FC<ShowProfileSortProps> = ({ \r\n  ref, dyeSortButton, changeSort, isMe, slide\r\n}) => {\r\n  return (\r\n    <nav className={classes.profileSort}>\r\n      <h6 onClick={slide}>\r\n        Show\r\n        <span data-mobile>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\" stroke='currentColor'></line>'\r\n            <polyline points=\"5 12 12 5 19 12\" stroke=\"currentColor\"></polyline>\r\n          </svg>\r\n        </span>\r\n      </h6>\r\n\r\n      <div className={classes.panel} ref={ref}>\r\n      <button \r\n        onClick={() => changeSort('overview')}\r\n        style={dyeSortButton('overview')}\r\n        className={classes.btn}\r\n      > Overview </button>\r\n\r\n      <button \r\n        onClick={() => changeSort('posts')}\r\n        style={dyeSortButton('posts')}\r\n        className={classes.btn}\r\n      > Posts </button>\r\n\r\n      <button \r\n        onClick={() => changeSort('comments')}\r\n        style={dyeSortButton('comments')}\r\n        className={classes.btn}\r\n      > Comments </button>\r\n\r\n      {isMe && (\r\n        <button \r\n          onClick={() => changeSort('saved')}\r\n          style={dyeSortButton('saved')}\r\n          className={classes.btn}\r\n        >Saved</button>\r\n      )}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default ShowProfileSort","import React, { useEffect, useRef, useState } from 'react'\r\nimport { IProfileSortBar } from '../types'\r\nimport { Properties } from 'csstype'\r\nimport classes from './ProfileSort.module.scss'\r\n\r\nimport { useAccessToken, useFetch } from '@shared/hooks'\r\nimport ShowProfileSort from '../ShowProfileSort/ShowProfileSort'\r\n\r\ninterface ProfileSortProps {\r\n  changeSort(sort: IProfileSortBar): void,\r\n  username: string,\r\n  sort: IProfileSortBar\r\n}\r\n\r\nconst ProfileSort: React.FC<ProfileSortProps> = ({ changeSort, username, sort }) => {\r\n  const token = useAccessToken()\r\n  const [isMe, setIsMe] = useState(false)\r\n  const panel = useRef<HTMLDivElement>(null)\r\n\r\n  const acceptData = (data: any) => {\r\n    if (data.name === username) {\r\n      setIsMe(true)\r\n    }\r\n  }\r\n\r\n  useEffect(useFetch({\r\n    path: `/api/v1/me`,\r\n    callback: acceptData\r\n  }), [token])\r\n\r\n  const dyeSortButton = (currentSort: IProfileSortBar): Properties => ({\r\n    backgroundColor: currentSort === sort ? 'var(--accent-color)' : 'transparent',\r\n    color: currentSort === sort ? 'var(--gray-0)' : 'var(--primary-color-1)'\r\n  })\r\n\r\n  const slide = (e: React.MouseEvent) => {\r\n    if (window.matchMedia('(max-width: 576px)').matches) {\r\n      const heading = e.currentTarget as Element\r\n      heading.classList.toggle(classes.active)\r\n      if (panel.current!.style.maxHeight) {\r\n        panel.current!.style.maxHeight = ''\r\n      } else {\r\n        panel.current!.style.maxHeight = panel.current!.scrollHeight + 'px' //'200px'\r\n      }\r\n    }\r\n  }\r\n\r\n  return <ShowProfileSort \r\n    ref={panel}\r\n    dyeSortButton={dyeSortButton}\r\n    changeSort={changeSort}\r\n    isMe={isMe}\r\n    slide={slide}\r\n  />\r\n  /*return (\r\n    <nav className={classes.profileSort}>\r\n      <h6 onClick={slide}>\r\n        Show\r\n        <span data-mobile>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\" stroke='currentColor'></line>'\r\n            <polyline points=\"5 12 12 5 19 12\" stroke=\"currentColor\"></polyline>\r\n          </svg>\r\n        </span>\r\n      </h6>\r\n\r\n      <div className={classes.panel} ref={panel}>\r\n      <button \r\n        onClick={() => changeSort('overview')}\r\n        style={dyeSortButton('overview')}\r\n        className={classes.btn}\r\n      > Overview </button>\r\n\r\n      <button \r\n        onClick={() => changeSort('posts')}\r\n        style={dyeSortButton('posts')}\r\n        className={classes.btn}\r\n      > Posts </button>\r\n\r\n      <button \r\n        onClick={() => changeSort('comments')}\r\n        style={dyeSortButton('comments')}\r\n        className={classes.btn}\r\n      > Comments </button>\r\n\r\n      {isMe && (\r\n        <button \r\n          onClick={() => changeSort('saved')}\r\n          style={dyeSortButton('saved')}\r\n          className={classes.btn}\r\n        >Saved</button>\r\n      )}\r\n      </div>\r\n    </nav>\r\n  )*/\r\n}\r\n\r\nexport default ProfileSort","// extracted by mini-css-extract-plugin\nexport default {\"profileComment\":\"ProfileComment_profileComment__zJjop\",\"furtherBtn\":\"ProfileComment_furtherBtn__4qR0k\",\"fade-in\":\"ProfileComment_fade-in__gAg-m\",\"fade-out\":\"ProfileComment_fade-out__qYUtw\",\"scale-up\":\"ProfileComment_scale-up__AtFAT\",\"scale-down\":\"ProfileComment_scale-down__GVte0\",\"slide-out-up\":\"ProfileComment_slide-out-up__1cI+V\",\"slide-out-down\":\"ProfileComment_slide-out-down__JJdNF\",\"slide-out-right\":\"ProfileComment_slide-out-right__JsHPf\",\"slide-out-left\":\"ProfileComment_slide-out-left__r0Y5l\",\"slide-in-up\":\"ProfileComment_slide-in-up__BZluS\",\"slide-in-down\":\"ProfileComment_slide-in-down__xCKDX\",\"slide-in-right\":\"ProfileComment_slide-in-right__xk1+1\",\"slide-in-left\":\"ProfileComment_slide-in-left__BsAfR\",\"shake-x\":\"ProfileComment_shake-x__+q-y5\",\"shake-y\":\"ProfileComment_shake-y__nD2WD\",\"spin\":\"ProfileComment_spin__3+ts9\",\"ping\":\"ProfileComment_ping__nnjlB\",\"blink\":\"ProfileComment_blink__7ZotR\",\"float\":\"ProfileComment_float__6++vd\",\"bounce\":\"ProfileComment_bounce__BRs2I\",\"pulse\":\"ProfileComment_pulse__du8b5\"};","import React from 'react'\r\nimport { IProfileComment } from '../types'\r\nimport classes from './ProfileComment.module.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ProfileCommentProps {\r\n  data: IProfileComment\r\n}\r\n\r\nconst ProfileComment: React.FC<ProfileCommentProps> = ({ data }) => {\r\n  return (\r\n    <div className={classes.profileComment}>\r\n      <div className={classes.wrapper}>\r\n        <h6>In r/{data.subreddit}</h6>\r\n        <p>{data.body}</p>\r\n      </div>\r\n\r\n      <Link to={`/post/${data.linkId}`} className={classes.furtherBtn}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n          <polyline points=\"12 5 19 12 12 19\"></polyline>\r\n        </svg>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileComment","import { IProfileComment } from './types'\r\n\r\nconst trimProfileComment = (data: any): IProfileComment => {\r\n  //console.log('raw profile comment data:', data)\r\n\r\n  return {\r\n    body: data.body,\r\n    subreddit: data.subreddit,\r\n    permalink: data.permalink,\r\n    linkId: data.link_id\r\n  }\r\n}\r\n\r\nexport default trimProfileComment","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ProfileFeed_item__3BvB8\",\"fade-in\":\"ProfileFeed_fade-in__7KWT0\",\"fade-out\":\"ProfileFeed_fade-out__EB8r3\",\"scale-up\":\"ProfileFeed_scale-up__zZo7c\",\"scale-down\":\"ProfileFeed_scale-down__7OSeA\",\"slide-out-up\":\"ProfileFeed_slide-out-up__hkcqq\",\"slide-out-down\":\"ProfileFeed_slide-out-down__YKC0R\",\"slide-out-right\":\"ProfileFeed_slide-out-right__W3Osl\",\"slide-out-left\":\"ProfileFeed_slide-out-left__bLqyp\",\"slide-in-up\":\"ProfileFeed_slide-in-up__EiOQ7\",\"slide-in-down\":\"ProfileFeed_slide-in-down__E70fa\",\"slide-in-right\":\"ProfileFeed_slide-in-right__8yROw\",\"slide-in-left\":\"ProfileFeed_slide-in-left__ejA1e\",\"shake-x\":\"ProfileFeed_shake-x__Fpamo\",\"shake-y\":\"ProfileFeed_shake-y__zCStu\",\"spin\":\"ProfileFeed_spin__1jhUD\",\"ping\":\"ProfileFeed_ping__jOg8N\",\"blink\":\"ProfileFeed_blink__Vd+7j\",\"float\":\"ProfileFeed_float__YkTsu\",\"bounce\":\"ProfileFeed_bounce__OjN7h\",\"pulse\":\"ProfileFeed_pulse__X3VFM\"};","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { IProfileSortBar } from '../types'\r\nimport IState from '@redux/IState'\r\nimport ProfileComment from '../ProfileComment/ProfileComment'\r\nimport trimProfileComment from '../trimProfileComment'\r\nimport classes from './ProfileFeed.module.scss'\r\n\r\nimport { Observer } from '@shared/components'\r\nimport { useAccessToken } from '@shared/hooks'\r\n\r\nimport { trimPost, Post } from '@features/post'\r\n\r\n/*\r\noverview -> overview\r\nposts -> submitted\r\ncomments -> comments\r\n*/\r\n\r\ninterface ProfileFeedProps {\r\n  sort: IProfileSortBar,\r\n  username: string\r\n}\r\n\r\nconst ProfileFeed: React.FC<ProfileFeedProps> = ({ sort, username }) => {\r\n  const token = useAccessToken()\r\n  const baseUrl = useSelector((state: IState) => state.baseUrl)\r\n  const afterRef = useRef<string | null>(null)\r\n  const [data, setData] = useState<any[]>([])\r\n  const isAll = useRef(false)\r\n\r\n  const acceptData = (data: any, shouldReset: boolean) => {\r\n    //console.log('raw data', data)\r\n    //console.log(afterRef.current, data.data.after)\r\n    //console.log('after in response', data.data.after)\r\n    if (data.data.after === null) isAll.current = true\r\n    afterRef.current = data.data.after\r\n    //console.log(afterRef.current)\r\n\r\n    if (shouldReset) {\r\n      setData(data.data.children)\r\n    } else {\r\n      setData(prevData => ([\r\n        ...prevData,\r\n        ...data.data.children\r\n      ]))\r\n    }\r\n\r\n    /*setData(prevData => ([\r\n      ...prevData,\r\n      ...data.data.children\r\n    ]))*/\r\n  }\r\n\r\n  const fetchData = (shouldReset: boolean) => {\r\n    //console.log('token:', token, 'isAll:', isAll.current)\r\n    if (token && token !== 'error' && (!isAll.current || shouldReset)) {\r\n      if (shouldReset) {\r\n        //setData([])\r\n        isAll.current = false\r\n        afterRef.current = null\r\n      }\r\n      let newSort = ''\r\n      switch (sort) {\r\n        case 'overview':\r\n        case 'comments':\r\n        case 'saved':\r\n          newSort = sort\r\n          break;\r\n        \r\n        default: // posts\r\n          newSort = 'submitted'\r\n      }\r\n\r\n      const after = afterRef.current ? `&after=${afterRef.current}` : ''\r\n      //console.log('afterRef:', afterRef.current, 'new sort:', newSort)\r\n      fetch(`${baseUrl}/user/${username}/${newSort}.json?raw_json=1${after}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => acceptData(res, shouldReset))\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n\r\n  useEffect(() => fetchData(true), [token, sort])\r\n\r\n  return (\r\n    <div className={classes.profileFeed}>\r\n      {/*<button onClick={() => fetchData(false)}>reload</button>*/}\r\n      {data && data.map((item, i) => {\r\n        switch (item.kind) {\r\n          case 't3': // post\r\n            return <div className={classes.item}>\r\n              <Post key={i} data={trimPost(item.data)} />\r\n            </div>\r\n          \r\n          case 't1': // comment\r\n            return <div className={classes.item}>\r\n              <ProfileComment key={i} data={trimProfileComment(item.data)} />\r\n            </div>\r\n        \r\n          default:\r\n            return null\r\n        }\r\n      })}\r\n      {!isAll.current && token && data && (\r\n        /*<button onClick={() => fetchData(false)}>load more</button>*/\r\n        <Observer onObserve={() => fetchData(false)} logMessage=\"in profile feed\" />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileFeed","// extracted by mini-css-extract-plugin\nexport default {\"profileSidebar\":\"ProfileSidebar_profileSidebar__Awvlt\",\"fade-in\":\"ProfileSidebar_fade-in__jV8+c\",\"fade-out\":\"ProfileSidebar_fade-out__Nnhgs\",\"scale-up\":\"ProfileSidebar_scale-up__pIgeS\",\"scale-down\":\"ProfileSidebar_scale-down__d+wOm\",\"slide-out-up\":\"ProfileSidebar_slide-out-up__Wf4lE\",\"slide-out-down\":\"ProfileSidebar_slide-out-down__R5XYx\",\"slide-out-right\":\"ProfileSidebar_slide-out-right__rSno3\",\"slide-out-left\":\"ProfileSidebar_slide-out-left__o45yY\",\"slide-in-up\":\"ProfileSidebar_slide-in-up__uu8UR\",\"slide-in-down\":\"ProfileSidebar_slide-in-down__TFwOp\",\"slide-in-right\":\"ProfileSidebar_slide-in-right__Dls3H\",\"slide-in-left\":\"ProfileSidebar_slide-in-left__ZEtLK\",\"shake-x\":\"ProfileSidebar_shake-x__MYmr9\",\"shake-y\":\"ProfileSidebar_shake-y__SlW8S\",\"spin\":\"ProfileSidebar_spin__iWuP-\",\"ping\":\"ProfileSidebar_ping__uK5P+\",\"blink\":\"ProfileSidebar_blink__dw8bH\",\"float\":\"ProfileSidebar_float__S39nJ\",\"bounce\":\"ProfileSidebar_bounce__nbha-\",\"pulse\":\"ProfileSidebar_pulse__0GLSf\"};","import React, { useEffect, useState } from \"react\"\r\nimport classes from './ProfileSidebar.module.scss'\r\n\r\nimport { useAccessToken, useFetch } from \"@shared/hooks\"\r\n\r\nexport interface ProfileSidebarProps {\r\n  username: string\r\n}\r\n\r\nconst ProfileSidebar: React.FC<ProfileSidebarProps> = ({ username }) => {\r\n  const token = useAccessToken()\r\n\r\n  const [totalKarma, setTotalKarma] = useState<number>()\r\n  const [iconImg, setIconImg] = useState<string>()\r\n  const [cakeDay, setCakeDay] = useState<string>()\r\n\r\n  const acceptData = (data: any) => {\r\n    const date = new Date(data.data.created * 1000)\r\n    setTotalKarma(data.data.total_karma)\r\n    setIconImg(data.data.icon_img)\r\n    setCakeDay(`${date.getDate()}.${date.getMonth()+1}.${date.getFullYear()}`)\r\n  }\r\n\r\n  useEffect(useFetch({\r\n    path: `/user/${username}/about`,\r\n    callback: acceptData\r\n  }), [token])\r\n\r\n  return (\r\n    <aside className={classes.profileSidebar}>\r\n      <h5 className={classes.username}>{username}</h5>\r\n      {iconImg && (\r\n        <img src={iconImg} alt=\"\" />\r\n      )}\r\n      {totalKarma && (\r\n        <div>\r\n          <h6>{totalKarma}</h6>\r\n          <i>Karma</i>\r\n        </div>\r\n      )}\r\n      {cakeDay && (\r\n        <div>\r\n          <h6>{cakeDay}</h6>\r\n          <i>Cake day</i>\r\n        </div>\r\n      )}\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default ProfileSidebar","import {Profile} from '@features/profile'\r\nexport default Profile","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IProfileSortBar } from '../types'\r\nimport classes from './Profile.module.scss'\r\nimport IState from '@redux/IState'\r\n\r\nimport ProfileSort from '../ProfileSort/ProfileSort'\r\nimport ProfileFeed from '../ProfileFeed/ProfileFeed'\r\nimport ProfileSidebar from '../ProfileSidebar/ProfileSidebar'\r\n\r\nimport { Nav } from '@shared/components'\r\nimport { useAccessToken } from '@shared/hooks'\r\n\r\nconst Profile: React.FC = () => {\r\n  const token = useAccessToken()\r\n  const baseUrl = useSelector((state: IState) => state.baseUrl)\r\n  const { name } = useParams()\r\n\r\n  const [sort, setSort] = useState<IProfileSortBar>('overview')\r\n\r\n  const changeSort = (str: IProfileSortBar) => {\r\n    setSort(str)\r\n  }\r\n\r\n  /*const acceptData = (data: any) => {\r\n    console.log(data)\r\n  }*/\r\n\r\n  /*const fetchUser = () => {\r\n    console.log(token)\r\n    if (token && token !== 'error') {\r\n      fetch(`${baseUrl}/user/${name}/submitted.json?raw_json=1`, {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(acceptData)\r\n        .catch(error => console.log(error))\r\n    }\r\n  }*/\r\n\r\n  //useEffect(fetchUser, [token])\r\n\r\n  return (\r\n    <main className={classes.profile}>\r\n      <Nav />\r\n\r\n      {/*<div className={classes.subgrid}>\r\n        <div className={classes.profileSort}>\r\n          <ProfileSort \r\n            changeSort={changeSort} \r\n            username={name!} \r\n            sort={sort}\r\n          />\r\n        </div>\r\n        \r\n        <div className={classes.profileFeed}>\r\n          <ProfileFeed sort={sort} username={name!} />\r\n        </div>\r\n      </div>*/}\r\n\r\n      <section data-container className={classes.content}>\r\n        <section>\r\n          <div className={classes.sortbar}>\r\n            <ProfileSort \r\n              changeSort={changeSort}\r\n              username={name!}\r\n              sort={sort}\r\n            />\r\n          </div>\r\n          <ProfileFeed sort={sort} username={name!} />\r\n        </section>\r\n\r\n        <ProfileSidebar username={name!} />\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile"],"names":["ref","dyeSortButton","changeSort","isMe","slide","className","classes","onClick","xmlns","width","height","viewBox","x1","y1","x2","y2","stroke","points","style","username","sort","token","useAccessToken","useState","setIsMe","panel","useRef","useEffect","useFetch","path","callback","data","name","currentSort","backgroundColor","color","e","window","matchMedia","matches","currentTarget","classList","toggle","current","maxHeight","scrollHeight","subreddit","body","to","linkId","permalink","link_id","baseUrl","useSelector","state","afterRef","setData","isAll","fetchData","shouldReset","newSort","after","fetch","method","headers","Authorization","then","res","json","children","prevData","acceptData","catch","error","console","log","map","item","i","kind","trimPost","trimProfileComment","onObserve","logMessage","totalKarma","setTotalKarma","iconImg","setIconImg","cakeDay","setCakeDay","date","Date","created","total_karma","icon_img","getDate","getMonth","getFullYear","src","alt","useParams","setSort","str"],"sourceRoot":""}